name: 'Add Labels on Push or PR'

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  add-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch all branches
        run: |
          git fetch --prune

      - name: Set up environment variables
        run: |
          echo "DOMAIN_TAGS=image,user,board,security,recipe,mail,ingredient,tag,feat,ingredients,board,api,Api,comment,test,Test,book,User,Security,검색,냉장고,레시피,재료,유저,에러" >> $GITHUB_ENV
          echo "SETTING_TAGS=ci/cd,config,gradle,build,bug,action,리팩토링,서비스,Service,service,refactor,Refactor,coupang,naver,event,manager,meemo" >> $GITHUB_ENV
          echo "CODE_TAGS=refactor,update,style" >> $GITHUB_ENV

      - name: Get commits between branches
        run: |
          BASE_BRANCH=${{ github.base_ref }}
          PR_BRANCH=${{ github.head_ref }}
          COMMITS=$(git log --no-merges --oneline origin/$BASE_BRANCH..origin/$PR_BRANCH --pretty=format:"%s")
          echo "COMMITS=\"$COMMITS\"" >> $GITHUB_ENV

      - name: Determine labels based on commits
        id: determine_labels
        run: |
          DOMAIN_TAGS=(${DOMAIN_TAGS//,/ })
          SETTING_TAGS=(${SETTING_TAGS//,/ })
          CODE_TAGS=(${CODE_TAGS//,/ })
          LABELS=()

          for COMMIT in $COMMITS; do
            for TAG in "${DOMAIN_TAGS[@]}" "${SETTING_TAGS[@]}" "${CODE_TAGS[@]}"; do
              if [[ "$COMMIT" == *"$TAG"* ]]; then
                if [[ ! " ${LABELS[@]} " =~ " ${TAG} " ]]; then
                  LABELS+=("$TAG")
                  if [ ${#LABELS[@]} -ge 5 ]; then break; fi
                fi
              fi
            done
          done

          FINAL_LABELS=$(IFS=,; echo "${LABELS[*]}")
          echo "FINAL_LABELS=$FINAL_LABELS" >> $GITHUB_ENV

      - name: Create missing labels
        run: |
          IFS=',' read -r -a LABEL_ARRAY <<< "${{ env.FINAL_LABELS }}"
          for LABEL in "${LABEL_ARRAY[@]}"; do
            if ! gh label list | grep -q "^$LABEL$"; then
              echo "Creating label: $LABEL"
              gh label create "$LABEL" --color "$(printf '#%06X\n' $((RANDOM%16777215)))"
            else
              echo "Label '$LABEL' already exists, updating..."
              gh label edit "$LABEL" --color "$(printf '#%06X\n' $((RANDOM%16777215)))"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels to PR
        if: github.event_name == 'pull_request'
        run: |
          IFS=',' read -r -a LABEL_ARRAY <<< "${{ env.FINAL_LABELS }}"
          for LABEL in "${LABEL_ARRAY[@]}"; do
            echo "Adding label: $LABEL to PR #${{ github.event.pull_request.number }}"
            gh pr edit ${{ github.event.pull_request.number }} --add-label "$LABEL"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
