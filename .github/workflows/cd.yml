name: "[CI/CD] server boot"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Amazon Corretto JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

     # npm 있나 없나 없으면 설치하고 알지?
      - name: Install redoc-cli
        run: npm install -g @redocly/cli

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set Jasypt Password
        run: echo "JASYPT_PASSWORD=${{ secrets.JASYPT_PASSWORD }}" >> $GITHUB_ENV

      - name: Decode and Unzip OCI Wallet
        run: |
          echo "${{ secrets.OCI_WALLET }}" | base64 --decode > Wallet_fridgeChef.zip
          mkdir -p /home/runner/work/FridgeChef_BE/FridgeChef_BE/Wallet_fridgeChef
          unzip Wallet_fridgeChef.zip -d /home/runner/work/FridgeChef_BE/FridgeChef_BE/Wallet_fridgeChef
          echo "TNS_ADMIN=/home/runner/work/FridgeChef_BE/FridgeChef_BE/Wallet_fridgeChef" >> $GITHUB_ENV
          chmod -R 755 /home/runner/work/FridgeChef_BE/FridgeChef_BE/Wallet_fridgeChef

      - name: Build with Gradle
        run: ./gradlew bootJar -Dspring.profiles.active=dev

      - name: create docs
        run: |
          ./gradlew openapi3 --info
          redoc-cli bundle build/api-spec/openapi3.yaml --output src/main/resources/static/my-api-docs.html

      #------------------ssh 사용 권한 ---------------------------------
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.APP_SERVER_SSH_KEY }}" > ssh_key
          chmod 600 ssh_key

      - name: ssh key test
        run: |
          ssh-keygen -y -f ssh_key > public_key
          cat public_key

      - name: Add remote host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.APP_SERVER_IP }} >> ~/.ssh/known_hosts
      #---------------------------------------------------

      - name: Transfer to Remote Server
        run: |
          scp -i ssh_key build/libs/*.jar ${{ secrets.SERVER_NAME }}@${{ secrets.APP_SERVER_IP }}:/home/ubuntu/dev/server_new.jar

      - name: Restart Server
        run: |
          ssh -i ssh_key ${{ secrets.SERVER_NAME }}@${{ secrets.APP_SERVER_IP }} "
          if [ -f /home/ubuntu/dev/server.jar ]; then
            mv /home/ubuntu/dev/server.jar /home/ubuntu/dev/backup/server_$(date +%Y%m%d%H%M%S).jar
          fi &&
          mv /home/ubuntu/dev/server_new.jar /home/ubuntu/dev/server.jar &&
          sudo systemctl restart fridge_service.service
          "
