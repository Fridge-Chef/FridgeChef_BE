plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id 'org.openapi.generator' version '7.0.1'
}

group = 'Fridge-Chef'
version = '0.0.1-SNAPSHOT'

java { toolchain { languageVersion = JavaLanguageVersion.of(17) } }

repositories {
    mavenCentral()
}

configurations {
    asciidoctorExt
    querydsl.extendsFrom compileClasspath
    compileOnly {
        extendsFrom annotationProcessor
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    //auth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'org.jasypt:jasypt:1.9.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //jwt
    implementation("io.jsonwebtoken:jjwt-api:0.12.6")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.6")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.6")

    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    //db
    implementation 'com.h2database:h2'
    implementation 'com.oracle.database.jdbc:ojdbc8:19.8.0.0'
    implementation 'com.oracle.database.security:oraclepki'
    implementation 'com.oracle.database.security:osdt_cert'
    implementation 'com.oracle.database.security:osdt_core'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'


    //docs -> rest doc - openapi - redocly
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-core'

    // oracle cloud
    implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-objectstorage', version: '3.0.0'
    implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-common-httpclient-jersey3', version: '3.0.0'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
}

def docsDir = 'build/generated-snippets'

openapi3 {
    server = 'https://fridgebe.site'
    title = 'Fridge Chef API Docs'
    description = 'Fridge Chef API description'
    tagDescriptionsPropertiesFile = 'src/test/resources/docs/tag.yaml'
    format = 'yaml'
}

task makeOAS(type: Exec) {
    commandLine './gradlew', 'openapi3'
}


task openapi3fix(type: Exec) {
    commandLine 'bash', '-c', 'source venv/bin/activate && python fix-openapi-yaml.py build/api-spec/openapi3.yaml'
    standardOutput = new ByteArrayOutputStream()

    doLast {
        def outputStream = new FileOutputStream('openapi-fixed.yaml')
        outputStream.write(standardOutput.toString().getBytes())
        outputStream.close()

        def processResult = standardOutput.toString()
        if (processResult.contains('Traceback') || processResult.contains('Error')) {
            println "오류가 발생했습니다."
        } else {
            println "YAML 파일이 성공적으로 수정되었습니다."
        }
    }
}

task redocGenerationIntegration(type: Exec) {
    sleep(1000)
    commandLine 'bash', '-c', 'source venv/bin/activate && python fix-openapi-required-yaml.py && redoc-cli bundle openapi-fixed.yaml'

    doLast {
        copy {
            from 'redoc-static.html'
            into 'src/main/resources/static'
            rename { 'docs.html' }
        }
    }
}

openapi3fix.dependsOn makeOAS
redocGenerationIntegration.dependsOn openapi3fix

def groupName = "automatic_documentation"
makeOAS.group = groupName
openapi3fix.group = groupName
redocGenerationIntegration.group = groupName

